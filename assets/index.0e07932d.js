import{r as e,g as n,G as t}from"./vendor.101c605e.js";!function(e=".",n="__import__"){try{self[n]=new Function("u","return import(u)")}catch(t){const o=new URL(e,location),a=e=>{URL.revokeObjectURL(e.src),e.remove()};self[n]=e=>new Promise(((t,r)=>{const c=new URL(e,o);if(self[n].moduleMap[c])return t(self[n].moduleMap[c]);const u=new Blob([`import * as m from '${c}';`,`${n}.moduleMap['${c}']=m;`],{type:"text/javascript"}),l=Object.assign(document.createElement("script"),{type:"module",src:URL.createObjectURL(u),onerror(){r(new Error(`Failed to import: ${e}`)),a(l)},onload(){t(self[n].moduleMap[c]),a(l)}});document.head.appendChild(l)})),self[n].moduleMap={}}}("assets/");var o=new class{constructor(){this.message="dat.gui",this.detail=125,this.play=()=>document.getElementById("sound").play()}};window.vScale=1,window.gen=!1,window.vol=[];const a=e({extensions:["webgl_draw_buffers","oes_texture_float","oes_texture_float_linear"]}),r=new n.GPU,c=new t;var u=c.add(o,"detail",10,1080,5);c.add(o,"play"),u.onFinishChange((function(e){window.resizeG(e)}));const l=0,i=0;var s=261.625565,v=s;window.mul=17**.5;function x(e){return v*o.detail/e}window.fastMode=!1,window.simF=x;var m=0,p=(new Date).getTime();(new Date).getTime();var f=function(e,n){this.isReady=!1,this.frequency=1,this.amplitude=0,this.waveOffset=0,this.context=e,this.ac=r.createKernel("function(input) {\n         let sum = 0.0;\n         for(let jk = 0.0; jk < this.constants.n; jk++) {\n           if(jk+this.thread.x<this.constants.n){\n             sum += input[jk] * input[jk+this.thread.x]; // Pad input with zeroes\n         \n           }\n         }\n         \n         return sum ;\n        \n       }",{output:[8192],constants:{n:8192}}),window._processor=this.processor=this.context.createScriptProcessor(1024,1,1),this.processor.onaudioprocess=function(n){for(var t=n.inputBuffer.getChannelData(0),o=[],a=0;a<t.length;a++)o[a]=t[a];var r=window.vol.concat(o);r.length,r=r.slice(Math.max(0,r.length-8192),Math.min(Math.max(0,r.length-8192)+8192,r.length)),window.vol=r,m=((m-1024/e.sampleRate)%(1/v)+1/v)%(1/v);for(var c=n.outputBuffer,u=0;u<c.numberOfChannels;u++){var l=c.getChannelData(u);for(a=0;a<c.length;a++)l[a]=0}this.isReady&&(this._process(window.vol),window.mul=getAvePitch()/s,window.vScale=1)}.bind(this),this.source=n,this.source.connect(this.processor).connect(this.context.destination),this.isReady=!0};f.prototype._process=function(e){var n,t,o;if(this.isReady=!1,window.vol.length>=8192){n=function(e){for(var n=[0],t=1;t<e.length-1;t+=1)e[t]>0&&e[t-1]<e[t]&&e[t]>e[t+1]&&n.push(t);return n}(this.ac(window.vol)),t=(o=n).reduce((function(e,n,t){return e[t]=o[t]-o[t-1],e}),[]).slice(1);var a=this.context.sampleRate/function(e){var n;return e.sort((function(e,n){return e-n})),n=Math.floor(e.length/2),e.length%2?e[n]:(e[n-1]+e[n])/2}(t),r=1;if(a/s<Math.pow(2,5)){for(;a>s*Math.pow(2,23/12);)a/=4,r/=4;var c=Math.max(...window.vol);this.waveOffset=window.vol.indexOf(c);var u=r;this.frequency=a*u+this.frequency*(1-u),this.amplitude=c}}this.isReady=!0},function(e,n){n=document.getElementById("sound").captureStream(),window.onclick=()=>document.getElementById("sound").play(),window.onmousedown=()=>document.getElementById("sound").play(),window.vol=[0];for(var t=0;t<1024;t++)window.vol.push(0);const r=new AudioContext;var c=r.createMediaStreamSource(n),u=new f(r,c);function v(){return u.frequency||0}function d(){return u.amplitude||0}window.getAvePitch=v,window.getAmplitude=d,console.log(c);const h=a.texture({wrapS:"clamp",wrapT:"clamp",mag:"linear",min:"linear"}),y=function(e){let n=[g(),g()];return{read:()=>n[0].buf,write:()=>n[1].buf,swap(){n.reverse()},resize(e,t){n.forEach((n=>{n.tex.resize(e,t),n.buf.resize(e,t)}))}}}();function g(e){let n=a.texture({type:"float",width:o.detail,height:o.detail,mag:"linear"});return{tex:n,buf:a.framebuffer({color:n,depthStencil:!1})}}window.fboA=y;const V=a({frag:"\n precision mediump float;\n uniform sampler2D texture;\n uniform vec2 mouse;\n uniform vec2 res;\n uniform float t;\n uniform float vol;\n varying vec2 uv;\n uniform float mp;\n \n void main () {\n   vec2 uvc=(uv-vec2(0.5,0.5))*2.0;\n   if(max(abs(uvc.x),abs(uvc.y))>1.0){\n     gl_FragColor = vec4(vec3(0.0),1.0);\n       \n     return;\n   }\n   float fadeIn=20.0;\n   float easeIn=1.0;\n   if(t<fadeIn){\n     easeIn=t/fadeIn;\n   }\n     float mpt=mp;///2.0;\n     \n     vec2 cVa=texture2D(texture,uv).xy;\n     //vec2 cVa0=texture2D(texture,uv).xy;\n     float sX=cVa.x+0.0;\n     float gn=texture2D(texture,uv).z;\n     cVa.y=cVa.y*2.0-1.0;\n     //cVa0.y=cVa0.y*2.0-1.0;\n     \n     float q=0.0;\n     float qC=0.0;\n    \n       float s=1.0;\n       if(mpt>1.0){\n         s=mpt+0.0;\n         mpt=1.0;\n       }\n       float c=1.0/(s);\n     vec2 up=uv+vec2(0.0,-1.0)/res.xy*s;\n     vec2 left=uv+vec2(-1.0,0.0)/res.xy*s;\n     vec2 right=uv+vec2(1.0,0.0)/res.xy*s;\n     vec2 down=uv+vec2(0.0,1.0)/res.xy*s;\n     \n     vec2 uVa=texture2D(texture,up).xy;\n     uVa.y=uVa.y*2.0-1.0;\n     vec2 lVa=texture2D(texture,left).xy;\n     lVa.y=lVa.y*2.0-1.0;\n     vec2 rVa=texture2D(texture,right).xy;\n     rVa.y=rVa.y*2.0-1.0;\n     vec2 dVa=texture2D(texture,down).xy;\n     dVa.y=dVa.y*2.0-1.0;\n     float oS=0.0;\n     q+=(dVa.x+dVa.y*oS-cVa.y*oS)*c;\n     q+=(uVa.x+uVa.y*oS-cVa.y*oS)*c;\n     q+=(lVa.x+lVa.y*oS-cVa.y*oS)*c;\n     q+=(rVa.x+rVa.y*oS-cVa.y*oS)*c;\n     qC+=c*4.0;\n     float pos=cVa.x-0.5;\n     \n     float accel=(q/qC-cVa.x)*mpt;\n     float vel=(cVa.y+0.0);//+accel/2.0;\n     cVa.y+=accel;\n     \n     \n     \n     float gnt=0.0;\n    \n     if(t<fadeIn){\n         \n         cVa=(vec2(0.5,0.0)*(1.0-easeIn)+cVa*(easeIn));\n         pos=0.0*(1.0-easeIn)+pos*(easeIn);\n         //gn=0.0;\n     }\n     gnt=gn;//1.0;//abs(abs(rVa.x-0.5)+abs(lVa.x-0.5)+abs(uVa.x-0.5)+abs(dVa.x-0.5)-abs((rVa.x-0.5)+(lVa.x-0.5)+(uVa.x-0.5)+(dVa.x-0.5))*2.0)+abs(cVa.x-0.5);\n     float apRat=pow(abs(-accel/mpt/mpt/pos),0.5);\n     gnt=pow(pow(pos,2.0)+pow(vel/mpt/mpt,2.0)/abs(-accel/mpt/mpt/pos),0.5);\n    float H=gnt;\n     \n     //cVa.y=(vec2(0.5,0.0)*0.001+cVa*0.999).y;\n     float j=1.0-length((((uv-vec2(0.5))*res.xy)))*1.3;//pow(2.0,-pow(length(abs(uv-vec2(0.5))*res.xy)/10.0,2.0));\n     cVa.x+=cVa.y*mpt;\n     \n     if( j>0.0 ){\n    j=1.0;\n     float dp=vol/2.0+0.5;\n    \n       cVa=(cVa*(1.0-j)+vec2(dp,0.0)*j);//cos(t*0.1*2.0*atan(0.0,-1.0))/4.0+0.5;\n        }\n     \n   \n    \n    \n         gnt=H;\n         if(abs(gnt)<=1.0){//} && abs(pos)>gnt/2.0){//&& dot(pos,vel)>=0.0 && dot(vel+accel,vel)<=0.0 ){//} && abs(vel+pos-accel/2.0)>=abs(pos))){\n     \n       float le=max(gn/1000.0,0.00001);//max(min((1.0-pow(0.5,1.0*apRat/100.0)),0.01),0.00001);//min(abs(vel*2.0+pos-0.5)/abs(pos-0.5)*0.001+0.00001,1.0);\n       gnt=gnt;\n       //gn=gnt*le+gn*(1.0-le);//+min(max(gnt-gn,-le),le);\n       gn=gn+min(max(gnt-gn,-le),le);\n     }\n     \n   \n    \n     \n     if(true||mod(float(t),1024.0*128.0)<1.0||abs(vel)>=abs(pos+abs(vel)*sign(pos))){\n      \n       float d=0.001;//abs(pos+abs(vel)*s\n     cVa=(vec2(0.5,0.0)*d+cVa*(1.0-d));\n \n     }\n    \n     vec2 outp=vec2(cVa.x,cVa.y*0.5+0.5);\n \n     gn=max(min(1.0,gn),0.0);\n     outp.x=max(min(1.0,outp.x),0.0);\n     outp.y=max(min(1.0,outp.y),0.0);\n     gl_FragColor = vec4(vec3(outp,gn),1.0);\n }",vert:"\n \n   precision mediump float;\n   attribute vec2 position;\n   varying vec2 uv;\n   void main () {\n     uv = position/2.0+vec2(0.5,0.5);\n     gl_Position = vec4(position, 0, 1);\n   }\n   ",attributes:{position:[-1,-1,3,-1,-1,3]},framebuffer:()=>y.write(),uniforms:{texture:()=>y.read(),mouse:({pixelRatio:e,viewportHeight:n,viewportWidth:t})=>[l*e,n-i*e],res:({viewportHeight:e,viewportWidth:n})=>[o.detail,o.detail],t:({tick:e})=>e,vol:()=>{return e=m*r.sampleRate,n=e%1,t=Math.cos(2*Math.PI*(m-u.waveOffset/r.sampleRate)*v())*d()+.25*((window.vol[Math.floor(e%8192)]||0)*(1-n)+(window.vol[Math.floor((e+1)%8192)]||0)*n),m%=1/(s*window.mul),t;var e,n,t},mp:()=>1},blend:{enable:!1,func:{srcRGB:"src color",srcAlpha:1,dstRGB:"src color",dstAlpha:1},equation:{rgb:"add",alpha:"add"},color:[0,0,0,0]},count:3}),w=a({frag:"\n     precision mediump float;\n     uniform sampler2D texture;\n     uniform sampler2D p;\n     uniform sampler2D textureB;\n     uniform sampler2D textureC;\n     uniform vec2 mouse;\n     uniform vec2 res;\n     uniform vec2 resp;\n     uniform float t;\n     varying vec2 uv;\n     float hue2rgb(float f1, float f2, float hue) {\n       if (hue < 0.0)\n           hue += 1.0;\n       else if (hue > 1.0)\n           hue -= 1.0;\n       float res;\n       if ((6.0 * hue) < 1.0)\n           res = f1 + (f2 - f1) * 6.0 * hue;\n       else if ((2.0 * hue) < 1.0)\n           res = f2;\n       else if ((3.0 * hue) < 2.0)\n           res = f1 + (f2 - f1) * ((2.0 / 3.0) - hue) * 6.0;\n       else\n           res = f1;\n       return res;\n   }\n   \n   vec3 hsl2rgb(vec3 hsl) {\n       vec3 rgb;\n       \n       if (hsl.y == 0.0) {\n           rgb = vec3(hsl.z); // Luminance\n       } else {\n           float f2;\n           \n           if (hsl.z < 0.5)\n               f2 = hsl.z * (1.0 + hsl.y);\n           else\n               f2 = hsl.z + hsl.y - hsl.y * hsl.z;\n               \n           float f1 = 2.0 * hsl.z - f2;\n           \n           rgb.r = hue2rgb(f1, f2, hsl.x + (1.0/3.0));\n           rgb.g = hue2rgb(f1, f2, hsl.x);\n           rgb.b = hue2rgb(f1, f2, hsl.x - (1.0/3.0));\n       }   \n       return rgb;\n   }\n   \n   vec3 normAt(vec2 p){\n     float mp=1.0;\n         float qb=2.0;\n         vec2 rc=vec2(min(res.x,res.y));\n         vec2 uv2=p;\n         vec2 up=uv2+vec2(0.0,-1.0)/resp.xy*qb;\n         vec2 left=uv2+vec2(-1.0,0.0)/resp.xy*qb;\n         vec2 right=uv2+vec2(1.0,0.0)/resp.xy*qb;\n         vec2 down=uv2+vec2(0.0,1.0)/resp.xy*qb;\n         vec2 cVa=texture2D(texture,uv2).xy;\n         float gn=texture2D(texture,uv2).z;\n         float gnB=texture2D(texture,vec2(0.0,0.0)).z;\n         cVa.y=cVa.y*2.0-1.0;\n         vec2 uVa=texture2D(texture,up).xy;\n         uVa.y=uVa.y*2.0-1.0;\n         vec2 lVa=texture2D(texture,left).xy;\n         lVa.y=lVa.y*2.0-1.0;\n         vec2 rVa=texture2D(texture,right).xy;\n         rVa.y=rVa.y*2.0-1.0;\n         vec2 dVa=texture2D(texture,down).xy;\n         dVa.y=dVa.y*2.0-1.0;\n         vec2 aa=(cVa+uVa+dVa+lVa+rVa)/5.0;\n         \n         //cVa.x+=cVa.y*mp;\n         //uVa.x+=uVa.y*mp;\n         //lVa.x+=lVa.y*mp;\n         //rVa.x+=rVa.y*mp;\n         //dVa.x+=dVa.y*mp;\n         vec3 normal=vec3(0.0,0.0,0.0);\n         float h=100.0;\n        \n         \n         \n         \n         \n         normal+=normalize(vec3(gn-texture2D(texture,right).z,0.0,1.0/h));\n         normal+=normalize(-vec3(gn-texture2D(texture,left).z,0.0,-1.0/h));\n         normal+=normalize(vec3(0.0,gn-texture2D(texture,down).z,1.0/h));\n         normal+=normalize(-vec3(0.0,gn-texture2D(texture,up).z,-1.0/h));\n         normal=normalize(normal);\n         return normal;\n   }\n     void main () {\n       vec2 rc=vec2(min(res.x,res.y));\n         vec2 uv2=(uv-vec2(0.5,0.5)-vec2(0.5,0.5)/res.xy*0.0)*res.xy/rc.xy+vec2(0.5,0.5);\n         vec2 uvc=(uv2-vec2(0.5,0.5))*2.0;\n         if(max(abs(uvc.x),abs(uvc.y))>1.0){\n           gl_FragColor = vec4(vec3(0.0),1.0);\n             \n           return;\n         }\n         float gn=texture2D(texture,uv2).z;\n      \n       gl_FragColor = vec4(vec3( min(max(1.0-gn/texture2D(texture,vec2(0.0)).z,0.0),1.0)),1.0);\n         float mp=1.0;\n         float qb=1.0;\n         vec2 up=uv2+vec2(0.0,-1.0)/resp.xy*qb;\n         vec2 left=uv2+vec2(-1.0,0.0)/resp.xy*qb;\n         vec2 right=uv2+vec2(1.0,0.0)/resp.xy*qb;\n         vec2 down=uv2+vec2(0.0,1.0)/resp.xy*qb;\n         vec2 cVa=texture2D(texture,uv2).xy;\n         float gnB=texture2D(texture,vec2(0.0,0.0)).z;\n         cVa.y=cVa.y*2.0-1.0;\n         vec2 uVa=texture2D(texture,up).xy;\n         uVa.y=uVa.y*2.0-1.0;\n         vec2 lVa=texture2D(texture,left).xy;\n         lVa.y=lVa.y*2.0-1.0;\n         vec2 rVa=texture2D(texture,right).xy;\n         rVa.y=rVa.y*2.0-1.0;\n         vec2 dVa=texture2D(texture,down).xy;\n         dVa.y=dVa.y*2.0-1.0;\n         vec2 aa=(cVa+uVa+dVa+lVa+rVa)/5.0;\n         \n         //cVa.x+=cVa.y*mp;\n         //uVa.x+=uVa.y*mp;\n         //lVa.x+=lVa.y*mp;\n         //rVa.x+=rVa.y*mp;\n         //dVa.x+=dVa.y*mp;\n         vec3 normal=vec3(0.0);\n         vec2 jDir=vec2(0.0);\n         vec3 mep=vec3(uv2,texture2D(texture,uv2).z);\n         float hb=0.0;\n         float tt=0.0;\n         vec2 cp=vec2(0.0);\n         float maxChangeD=0.001;\n         vec3 minColor=vec3(1.0,1.0,1.0);\n         vec3 maxColor=vec3(0.0,0.0,0.0);\n         for(int i=-4;i<=4;i++){\n           for(int j=-4;j<=4;j++){\n             if((i*i>0 || j*j>0 )&& length(vec2(i,j))<=4.0){//} && abs(float(i*j))<1.0){\n               \n             vec2 op=uv2+vec2(float(i),float(j))/resp.xy*qb;\n             vec2 op2=uv2+vec2(float(j),-float(i))/resp.xy*qb;\n             float pV=pow(length(vec2(i,j)),0.0);\n             vec2 smapC=uv+vec2(float(j),-float(i))/res.xy*5.0;\n             minColor=min(texture2D(p,smapC).xyz+vec3(maxChangeD*length(vec2(i,j))),minColor);\n             maxColor=max(texture2D(p,smapC).xyz-vec3(maxChangeD*length(vec2(i,j))),maxColor);\n             tt+=pV;\n             if(texture2D(texture,op).z>texture2D(texture,uv2).z){//} && texture2D(texture,uv2*2.0-op).z>texture2D(texture,uv2).z){//abs(texture2D(texture,op).y-0.5)>abs(texture2D(texture,uv2).y-0.5)){// && texture2D(texture,uv2-op*2.0).z>gn){\n               hb+=pV;\n               cp+=vec2(float(i),float(j));\n               }\n               float mmm=1.0;\n                 if(vec2(float(i),float(j)).y<0.0 ||(vec2(float(i),float(j)).y<=0.0 &&vec2(float(i),float(j)).x<=0.0)){\n                   mmm=-1.0;\n                 }\n                 if(length(vec2(i,j))<=10.0){\n                 jDir+=vec2(float(i),float(j))*mmm*(texture2D(texture,op).z-texture2D(texture,op2).z);\n                 }\n             //hb=hb+texture2D(texture,op).z/gnB;\n               vec3 opp=vec3(op,texture2D(texture,op).z)-mep;\n               vec3 opp2=vec3(op2,texture2D(texture,op2).z)-mep;\n               normal+=normalize(cross(opp,opp2)/length(opp)/length(opp2));///vec3(vec2(length(opp)*length(opp2)),0.001));\n             }\n           }\n         }\n         normal.z=0.01*normal.z;\n         normal=normalize(normal);\n         normal.xy=normalize(jDir);\n         \n         //normalize(normAt(uv2)+normAt(up)+normAt(left)+normAt(down)+normAt(right));\n         float colA=atan(normal.y,normal.x)/atan(0.0,-1.0)/2.0;\n         //if(cVa.y<0.0){\n           //colA+=0.5;\n           //colA=mod(colA,1.0);\n         //}\n         //if(uvc.x<0.0){\n           colA=mod(colA,1.0);\n           colA=colA*2.0;\n           colA=mod(colA,1.0);\n           //colA+=0.5;\n         //}\n         if(hb/tt<0.5){\n           normal.z=-normal.z;\n         }\n        float th=0.5;//(tt-40.0)/tt;\n         gn=(hb/tt-th)/(1.0-th);\n //         if(1.0-texture2D(texture,uv2).z/texture2D(texture,vec2(0.0)).z<0.5){\n // gn=0.0;\n //         }\n         //gn=gn*gn;\n         if(gn<0.5){//||length(cp)>10.0){\n           //gn=0.0;\n         }\n         vec3 col=2.0*hsl2rgb(vec3(mod(colA,1.0),0.75,min(max(gn*1.0-0.25+0.0*-normal.z/4.0+0.25 +0.0*(0.5+texture2D(texture,vec2(0.0)).z*8.0),0.0),0.5)));//max(1.0-10.0*pow(pow((cVa.x-0.5)*4.0,2.0)+pow(cVa.y*8.0,2.0),0.5),0.0)));\n       vec4 cooo = vec4(col,1.0);\n       //gl_FragColor=vec4(vec3(1.0-texture2D(texture,uv2).z/texture2D(texture,vec2(0.0)).z,1.0-texture2D(textureB,uv2).z/texture2D(textureB,vec2(0.0)).z,1.0-texture2D(textureC,uv2).z/texture2D(textureC,vec2(0.0)).z),1.0);\n     //gl_FragColor=vec4(vec3(texture2D(texture,uv2).z,texture2D(textureB,uv2).z,texture2D(textureC,uv2).z),1.0);\n     float jUp=0.005;\n     float jDown=0.000;\n     maxColor=max(maxColor,texture2D(p,uv).xyz+jUp);\n     minColor=min(minColor,texture2D(p,uv).xyz-jDown);\n      cooo.x=max(min(cooo.x,maxColor.x),minColor.x);\n      cooo.y=max(min(cooo.y,maxColor.y),minColor.y);\n      cooo.z=max(min(cooo.z,maxColor.z),minColor.z);\n       \n       gl_FragColor=cooo;//*0.25+texture2D(p,uv)*0.8;//-vec4(vec3(0.005),0.0);\n     }",vert:"\n     precision mediump float;\n     attribute vec2 position;\n     varying vec2 uv;\n     void main () {\n       uv = position/2.0+vec2(0.5,0.5);\n       gl_Position = vec4(position, 0, 1);\n     }",attributes:{position:[-1,-1,3,-1,-1,3]},uniforms:{texture:y.read(),p:h,mouse:({pixelRatio:e,viewportHeight:n,viewportWidth:t})=>[l*e,n-i*e],res:({viewportHeight:e,viewportWidth:n})=>[n,e],resp:({viewportHeight:e,viewportWidth:n})=>[o.detail,o.detail],t:({tick:e})=>e},count:3});window.resizeG=function(e,n){o.detail=e,y.resize(o.detail,o.detail)};var b=0;a.frame((function(){!function(){for(var e=(new Date).getTime();p<e&&(p+=1e3/x(1),m*r.sampleRate<window.vol.length&&(V(),y.swap(),m+=1/x(1)),!((new Date).getTime()-e>1e3/60)););}(),w(),b%1==0&&h({copy:!0,min:"nearest",mag:"nearest"}),b++}))}();
